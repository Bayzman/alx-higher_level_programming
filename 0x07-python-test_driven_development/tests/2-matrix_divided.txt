# Import module and function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Case 1
>>> matrix = [[30, 30, 30],[3, 3, 3]]
>>> print(matrix_divided(matrix, 3))
[[10.0, 10.0, 10.0], [1.0, 1.0, 1.0]]

# Case 2
>>> matrix = [[9, 2],[83, 73, 43]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Case 3
>>> matrix = [[13, 5], [45, 7]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Case 4
>>> print(matrix_divided(matrix, "let's divide by 2"))
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Case 5
>>> print(matrix_divided(matrix, 'True'))
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Case 6
>>> print(matrix_divided(None, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Case 7
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

# Case 8
>>> print(matrix_divided())
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Case 9
>>> print(matrix_divided(matrix, float('inf')))
[[0.0, 0.0], [0.0, 0.0]]
