# Tests for matrix_divided function

# Import the function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix2 = [[1.0, 2.0, 3.3], [6.6, 9.0, 12.3]]
>>> matrix_divided(matrix2, 3)
[[0.33, 0.67, 1.1], [2.2, 3.0, 4.1]]


>>> matrix_divided(matrix2, 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero


>>> matrix_divided(matrix2, 'number')
Traceback (most recent call last):
  ...
TypeError: div must be a number


>>> matrix_divided(None, 3)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1,2,3]], float('inf'))
[[0.0, 0.0, 0.0]]

>>> print(matrix_divided(matrix))
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> print(matrix_divided())
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix2 = [[9, 2],[83, 73, 43]]
>>> print(matrix_divided(matrix2, 3))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
